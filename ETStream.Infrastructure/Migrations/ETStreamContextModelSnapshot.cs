// <auto-generated />
using System;
using ETStream.Infrastructure.Sources;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETStream.Infrastructure.Migrations
{
    [DbContext(typeof(ETStreamContext))]
    partial class ETStreamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ETStream.Domain.Aggregates.Channel.ChannelEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Channels", (string)null);
                });

            modelBuilder.Entity("ETStream.Domain.Aggregates.Channel.ChannelPrivilegeGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChannelEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChannelEntityId");

                    b.ToTable("ChannelPrivilegeGroups", (string)null);
                });

            modelBuilder.Entity("ETStream.Domain.Aggregates.Media.MediaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChannelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Medias", (string)null);
                });

            modelBuilder.Entity("ETStream.Domain.Aggregates.School.SchoolEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schools", (string)null);
                });

            modelBuilder.Entity("ETStream.Domain.Aggregates.User.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ETStream.Domain.Aggregates.Channel.ChannelEntity", b =>
                {
                    b.OwnsMany("ETStream.Domain.Aggregates.Channel.Member", "Members", b1 =>
                        {
                            b1.Property<Guid>("ChannelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("UserId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("ChannelPrivilegeGroupId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ChannelId", "UserId");

                            b1.ToTable("Member");

                            b1.WithOwner()
                                .HasForeignKey("ChannelId");
                        });

                    b.Navigation("Members");
                });

            modelBuilder.Entity("ETStream.Domain.Aggregates.Channel.ChannelPrivilegeGroup", b =>
                {
                    b.HasOne("ETStream.Domain.Aggregates.Channel.ChannelEntity", null)
                        .WithMany("PrivilegeGroups")
                        .HasForeignKey("ChannelEntityId");

                    b.OwnsOne("ETStream.Domain.Aggregates.Channel.Privileges", "Privileges", b1 =>
                        {
                            b1.Property<Guid>("ChannelPrivilegeGroupId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("CanDeleteChannel")
                                .HasColumnType("bit");

                            b1.Property<bool>("CanDeleteContent")
                                .HasColumnType("bit");

                            b1.Property<bool>("CanEditChannel")
                                .HasColumnType("bit");

                            b1.Property<bool>("CanEditContent")
                                .HasColumnType("bit");

                            b1.Property<bool>("CanModerateComments")
                                .HasColumnType("bit");

                            b1.Property<bool>("CanPostContent")
                                .HasColumnType("bit");

                            b1.HasKey("ChannelPrivilegeGroupId");

                            b1.ToTable("ChannelPrivilegeGroups");

                            b1.ToJson("Privileges");

                            b1.WithOwner()
                                .HasForeignKey("ChannelPrivilegeGroupId");
                        });

                    b.Navigation("Privileges")
                        .IsRequired();
                });

            modelBuilder.Entity("ETStream.Domain.Aggregates.Media.MediaEntity", b =>
                {
                    b.OwnsOne("ETStream.Domain.Aggregates.Media.MediaType", "Type", b1 =>
                        {
                            b1.Property<Guid>("MediaEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.HasKey("MediaEntityId");

                            b1.ToTable("Medias");

                            b1.WithOwner()
                                .HasForeignKey("MediaEntityId");
                        });

                    b.OwnsMany("ETStream.Domain.Aggregates.Media.MediaContent", "Contents", b1 =>
                        {
                            b1.Property<Guid>("MediaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("ContentNumber")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("ContentNumber"));

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.HasKey("MediaId", "ContentNumber");

                            b1.ToTable("MediaContent");

                            b1.WithOwner()
                                .HasForeignKey("MediaId");
                        });

                    b.Navigation("Contents");

                    b.Navigation("Type")
                        .IsRequired();
                });

            modelBuilder.Entity("ETStream.Domain.Aggregates.Channel.ChannelEntity", b =>
                {
                    b.Navigation("PrivilegeGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
